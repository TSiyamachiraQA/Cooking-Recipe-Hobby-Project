<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-NAEHOQI" ignored="0" name="Surefire test" tests="66" failures="2" timestamp="20 May 2020 14:10:15 GMT" time="24.278" errors="0">
  <testcase name="shouldAnswerWithTrue on shouldAnswerWithTrue(com.qa.AppTest)" time="12.925" classname="com.qa.AppTest">
    <failure type="org.springframework.boot.web.server.PortInUseException" message="Port 8080 is already in use">
      <![CDATA[org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:213)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:297)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at com.qa.App.main(App.java:11)
	at com.qa.AppTest.shouldAnswerWithTrue(AppTest.java:14)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- shouldAnswerWithTrue on shouldAnswerWithTrue(com.qa.AppTest) -->
  <testcase name="getIngredientsByID on getIngredientsByID(com.qa.controller.IngredientsControllerIntegrationTest)" time="4.187" classname="com.qa.controller.IngredientsControllerIntegrationTest"/>
  <testcase name="deleteIngredientsTest on deleteIngredientsTest(com.qa.controller.IngredientsControllerIntegrationTest)" time="4.527" classname="com.qa.controller.IngredientsControllerIntegrationTest"/>
  <testcase name="createIngredientsTest on createIngredientsTest(com.qa.controller.IngredientsControllerIntegrationTest)" time="4.828" classname="com.qa.controller.IngredientsControllerIntegrationTest"/>
  <testcase name="getAllIngredientsTest on getAllIngredientsTest(com.qa.controller.IngredientsControllerIntegrationTest)" time="5.043" classname="com.qa.controller.IngredientsControllerIntegrationTest"/>
  <testcase name="createIngredientsTest on createIngredientsTest(com.qa.controller.IngredientsControllerUnitTest)" time="0.222" classname="com.qa.controller.IngredientsControllerUnitTest"/>
  <testcase name="deleteIngredientsTestTrue on deleteIngredientsTestTrue(com.qa.controller.IngredientsControllerUnitTest)" time="0.222" classname="com.qa.controller.IngredientsControllerUnitTest"/>
  <testcase name="getIngredientsByIDTest on getIngredientsByIDTest(com.qa.controller.IngredientsControllerUnitTest)" time="0.222" classname="com.qa.controller.IngredientsControllerUnitTest"/>
  <testcase name="getAllIngredientsTest on getAllIngredientsTest(com.qa.controller.IngredientsControllerUnitTest)" time="0.222" classname="com.qa.controller.IngredientsControllerUnitTest"/>
  <testcase name="deleteIngredientsTestFalse on deleteIngredientsTestFalse(com.qa.controller.IngredientsControllerUnitTest)" time="0.222" classname="com.qa.controller.IngredientsControllerUnitTest"/>
  <testcase name="createRecipesTest on createRecipesTest(com.qa.controller.RecipesControllerIntegrationTest)" time="0.432" classname="com.qa.controller.RecipesControllerIntegrationTest"/>
  <testcase name="getAllRecipesTest on getAllRecipesTest(com.qa.controller.RecipesControllerIntegrationTest)" time="0.638" classname="com.qa.controller.RecipesControllerIntegrationTest"/>
  <testcase name="getRecipesByID on getRecipesByID(com.qa.controller.RecipesControllerIntegrationTest)" time="0.828" classname="com.qa.controller.RecipesControllerIntegrationTest"/>
  <testcase name="deleteRecipesTest on deleteRecipesTest(com.qa.controller.RecipesControllerIntegrationTest)" time="1.144" classname="com.qa.controller.RecipesControllerIntegrationTest"/>
  <testcase name="createRecipesTest on createRecipesTest(com.qa.controller.RecipesControllerUnitTest)" time="0.054" classname="com.qa.controller.RecipesControllerUnitTest"/>
  <testcase name="deleteIngredientsTestTrue on deleteIngredientsTestTrue(com.qa.controller.RecipesControllerUnitTest)" time="0.054" classname="com.qa.controller.RecipesControllerUnitTest"/>
  <testcase name="getIngredientsByIDTest on getIngredientsByIDTest(com.qa.controller.RecipesControllerUnitTest)" time="0.054" classname="com.qa.controller.RecipesControllerUnitTest"/>
  <testcase name="getAllRecipesTest on getAllRecipesTest(com.qa.controller.RecipesControllerUnitTest)" time="0.054" classname="com.qa.controller.RecipesControllerUnitTest"/>
  <testcase name="deleteIngredientsTestFalse on deleteIngredientsTestFalse(com.qa.controller.RecipesControllerUnitTest)" time="0.054" classname="com.qa.controller.RecipesControllerUnitTest"/>
  <testcase name="ingredientsNamesNotEqual on ingredientsNamesNotEqual(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="constructorWithoutId on constructorWithoutId(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="otherIngredientsIdDifferent on otherIngredientsIdDifferent(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="checkEqualityBetweenDifferentObjects on checkEqualityBetweenDifferentObjects(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="checkEquality on checkEquality(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="equalsWithNull on equalsWithNull(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="otherIngredientsTypeDifferent on otherIngredientsTypeDifferent(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="createIngredientWithId on createIngredientWithId(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="equalsWithDifferentObject on equalsWithDifferentObject(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="settersTest on settersTest(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="hashCodeTest on hashCodeTest(com.qa.domain.IngredientsUnitTest)" time="0.0" classname="com.qa.domain.IngredientsUnitTest"/>
  <testcase name="recipeNamesNotEqual on recipeNamesNotEqual(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="constructorWithoutId on constructorWithoutId(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="checkEquality on checkEquality(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="equalsWithNull on equalsWithNull(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="createRecipeWithId on createRecipeWithId(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="nullServing on nullServing(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="equalsWithDifferentObject on equalsWithDifferentObject(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="settersTest on settersTest(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="otherIdDifferent on otherIdDifferent(com.qa.domain.RecipesUnitTest)" time="0.0" classname="com.qa.domain.RecipesUnitTest"/>
  <testcase name="constructorWithoutId on constructorWithoutId(com.qa.dto.IngredientsDTOUnitTest)" time="0.0" classname="com.qa.dto.IngredientsDTOUnitTest"/>
  <testcase name="checkEquality on checkEquality(com.qa.dto.IngredientsDTOUnitTest)" time="0.0" classname="com.qa.dto.IngredientsDTOUnitTest"/>
  <testcase name="equalsWithNull on equalsWithNull(com.qa.dto.IngredientsDTOUnitTest)" time="0.0" classname="com.qa.dto.IngredientsDTOUnitTest"/>
  <testcase name="createIngredientWithId on createIngredientWithId(com.qa.dto.IngredientsDTOUnitTest)" time="0.0" classname="com.qa.dto.IngredientsDTOUnitTest"/>
  <testcase name="equalsWithDifferentObject on equalsWithDifferentObject(com.qa.dto.IngredientsDTOUnitTest)" time="0.0" classname="com.qa.dto.IngredientsDTOUnitTest"/>
  <testcase name="settersTest on settersTest(com.qa.dto.IngredientsDTOUnitTest)" time="0.0" classname="com.qa.dto.IngredientsDTOUnitTest"/>
  <testcase name="constructorWithoutId on constructorWithoutId(com.qa.dto.RecipesDTOUnitTest)" time="0.0" classname="com.qa.dto.RecipesDTOUnitTest"/>
  <testcase name="checkEquality on checkEquality(com.qa.dto.RecipesDTOUnitTest)" time="0.0" classname="com.qa.dto.RecipesDTOUnitTest"/>
  <testcase name="equalsWithNull on equalsWithNull(com.qa.dto.RecipesDTOUnitTest)" time="0.0" classname="com.qa.dto.RecipesDTOUnitTest"/>
  <testcase name="createRecipeWithId on createRecipeWithId(com.qa.dto.RecipesDTOUnitTest)" time="0.0" classname="com.qa.dto.RecipesDTOUnitTest"/>
  <testcase name="equalsWithDifferentObject on equalsWithDifferentObject(com.qa.dto.RecipesDTOUnitTest)" time="0.0" classname="com.qa.dto.RecipesDTOUnitTest"/>
  <testcase name="settersTest on settersTest(com.qa.dto.RecipesDTOUnitTest)" time="0.0" classname="com.qa.dto.RecipesDTOUnitTest"/>
  <testcase name="seleniumExampleTest on seleniumExampleTest(com.qa.selenium.AppSeleniumTest)" time="0.97" classname="com.qa.selenium.AppSeleniumTest">
    <failure type="java.lang.NoClassDefFoundError" message="com/google/gson/JsonElement">
      <![CDATA[java.lang.NoClassDefFoundError: com/google/gson/JsonElement
	at java.lang.Class.getDeclaredMethods0(Native Method)
	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)
	at java.lang.Class.getDeclaredMethod(Class.java:2128)
	at org.openqa.selenium.json.JsonOutput.getMethod(JsonOutput.java:307)
	at org.openqa.selenium.json.JsonOutput.lambda$new$15(JsonOutput.java:154)
	at org.openqa.selenium.json.JsonOutput.lambda$write$29(JsonOutput.java:260)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:174)
	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)
	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:499)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:486)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)
	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:261)
	at org.openqa.selenium.json.JsonOutput.lambda$null$23(JsonOutput.java:177)
	at java.util.TreeMap.forEach(TreeMap.java:1005)
	at java.util.Collections$UnmodifiableMap.forEach(Collections.java:1507)
	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:176)
	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
	at org.openqa.selenium.json.JsonOutput.lambda$null$23(JsonOutput.java:177)
	at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:65)
	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:176)
	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:264)
	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:255)
	at org.openqa.selenium.json.Json.toJson(Json.java:42)
	at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:100)
	at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:94)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:170)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:159)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at com.qa.selenium.AppSeleniumTest.setUp(AppSeleniumTest.java:19)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-NAEHOQI', ip: '192.168.1.161', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: driver.version: ChromeDriver
		at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:279)
		at org.openqa.selenium.json.Json.toJson(Json.java:44)
		... 55 more
Caused by: java.lang.ClassNotFoundException: com.google.gson.JsonElement
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 82 more
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- seleniumExampleTest on seleniumExampleTest(com.qa.selenium.AppSeleniumTest) -->
  <testcase name="deleteIngredientsTest on deleteIngredientsTest(com.qa.services.IngredientsServicesIntegrationTest)" time="2.704" classname="com.qa.services.IngredientsServicesIntegrationTest"/>
  <testcase name="createIngredientsTest on createIngredientsTest(com.qa.services.IngredientsServicesIntegrationTest)" time="2.843" classname="com.qa.services.IngredientsServicesIntegrationTest"/>
  <testcase name="findIngredientsByIdTest on findIngredientsByIdTest(com.qa.services.IngredientsServicesIntegrationTest)" time="3.005" classname="com.qa.services.IngredientsServicesIntegrationTest"/>
  <testcase name="readIngredientsTest on readIngredientsTest(com.qa.services.IngredientsServicesIntegrationTest)" time="3.205" classname="com.qa.services.IngredientsServicesIntegrationTest"/>
  <testcase name="deleteIngredientsByExistingId on deleteIngredientsByExistingId(com.qa.services.IngredientsServicesUnitTest)" time="0.232" classname="com.qa.services.IngredientsServicesUnitTest"/>
  <testcase name="createIngredientsTest on createIngredientsTest(com.qa.services.IngredientsServicesUnitTest)" time="0.233" classname="com.qa.services.IngredientsServicesUnitTest"/>
  <testcase name="getAllIngredientsTest on getAllIngredientsTest(com.qa.services.IngredientsServicesUnitTest)" time="0.233" classname="com.qa.services.IngredientsServicesUnitTest"/>
  <testcase name="findNoteById on findNoteById(com.qa.services.IngredientsServicesUnitTest)" time="0.248" classname="com.qa.services.IngredientsServicesUnitTest"/>
  <testcase name="deleteIngredientsByNonExistingId on deleteIngredientsByNonExistingId(com.qa.services.IngredientsServicesUnitTest)" time="0.248" classname="com.qa.services.IngredientsServicesUnitTest"/>
  <testcase name="createRecipesTest on createRecipesTest(com.qa.services.RecipesServicesUnitTest)" time="0.053" classname="com.qa.services.RecipesServicesUnitTest"/>
  <testcase name="findRecipeById on findRecipeById(com.qa.services.RecipesServicesUnitTest)" time="0.053" classname="com.qa.services.RecipesServicesUnitTest"/>
  <testcase name="deleteRecipesByExistingId on deleteRecipesByExistingId(com.qa.services.RecipesServicesUnitTest)" time="0.068" classname="com.qa.services.RecipesServicesUnitTest"/>
  <testcase name="getAllRecipesTest on getAllRecipesTest(com.qa.services.RecipesServicesUnitTest)" time="0.068" classname="com.qa.services.RecipesServicesUnitTest"/>
  <testcase name="deleteIngredientsByNonExistingId on deleteIngredientsByNonExistingId(com.qa.services.RecipesServicesUnitTest)" time="0.068" classname="com.qa.services.RecipesServicesUnitTest"/>
</testsuite> <!-- Surefire test -->
